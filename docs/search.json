[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tutorial",
    "section": "",
    "text": "Preface\nA Brief Introduction to Computational Tools presents a collection of tutorials based on lecture notes from classes, designed to give learners clear and essential insights into key topics. No previous programming experience is required. Each tutorial guides you step by step through the concepts with hands-on examples.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "tutorial_basic.html",
    "href": "tutorial_basic.html",
    "title": "1  Python Tutorial",
    "section": "",
    "text": "1.1 Requirements\nThis tutorial introduces Python programming, covering basic concepts with examples to illustrate key points. We will start by using Python as a calculator, then explore variables, functions, and control flow.\nTo follow this tutorial, you must have Python (version 3.10 or later) installed on your computer. Python is available for Windows, macOS, and Linux. Additionally, ensure you have a text editor or an Integrated Development Environment (IDE) to write Python code. We recommend Positron, a user-friendly IDE with a built-in terminal for running Python scripts, though other editors like VS Code or PyCharm are also suitable.\nAlternatively, you can use a web-based environment like python-fiddle.com",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#basic-syntax",
    "href": "tutorial_basic.html#basic-syntax",
    "title": "1  Python Tutorial",
    "section": "1.2 Basic Syntax",
    "text": "1.2 Basic Syntax\nPython uses indentation (typically four spaces) to define code blocks. A colon (:) introduces a block, and statements within the block must be indented consistently. Python is case-sensitive, so Variable and variable are distinct identifiers. Statements typically end with a newline, but you can use a backslash (\\) to continue a statement across multiple lines.\ntotal = 1 + 2 + 3 + \\\n        4 + 5\nprint(total)  # Output: 15\nBasic syntax rules:\n\nComments start with # and extend to the end of the line.\nStrings can be enclosed in single quotes ('), double quotes (\"), or triple quotes (''' or \"\"\") for multi-line strings.\nPython is case-sensitive, so Variable and variable are different identifiers.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#the-print-function",
    "href": "tutorial_basic.html#the-print-function",
    "title": "1  Python Tutorial",
    "section": "1.3 The print() Function",
    "text": "1.3 The print() Function\nThe print() function displays output in Python.\nname = \"Rudolf Diesel\"\nyear = 1858\nprint(f\"{name} was born in {year}.\")\nOutput: Rudolf Diesel was born in 1858.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#formatting-in-print",
    "href": "tutorial_basic.html#formatting-in-print",
    "title": "1  Python Tutorial",
    "section": "1.4 Formatting in print()",
    "text": "1.4 Formatting in print()\nThe following table illustrates common f-string formatting options for the print() function:\n\n\n\n\n\n\n\n\n\nFormat\nCode\nExample\nOutput\n\n\n\n\nRound to 2 decimals\nf\"{x:.2f}\"\nprint(f\"{3.14159:.2f}\")\n3.14\n\n\nRound to whole number\nf\"{x:.0f}\"\nprint(f\"{3.9:.0f}\")\n4\n\n\nThousands separator\nf\"{x:,.2f}\"\nprint(f\"{1234567.89:,.2f}\")\n1,234,567.89\n\n\nPercentage\nf\"{x:.1%}\"\nprint(f\"{0.756:.1%}\")\n75.6%\n\n\nCurrency style\nf\"${x:,.2f}\"\nprint(f\"${1234.5:,.2f}\")\n$1,234.50\n\n\n\nNote: The currency symbol (e.g., $) can be modified for other currencies (e.g., €, £) based on the desired locale.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#variables-and-data-types",
    "href": "tutorial_basic.html#variables-and-data-types",
    "title": "1  Python Tutorial",
    "section": "1.5 Variables and Data Types",
    "text": "1.5 Variables and Data Types\nVariables store data and are assigned values using the = operator.\nx = 10\ny = 3.14\nname = \"Rudolph\"\nPython has several built-in data types, including:\n\nIntegers (int): Whole numbers, e.g., 10, -5\nFloating-point numbers (float): Decimal numbers, e.g., 3.14, -0.001\nStrings (str): Text, e.g., \"Hello\", 'World'\nBooleans (bool): True or False\n\n\n1.5.1 Arithmetic Operations\na = 10\nb = 3\nprint(a + b)  # Addition: 13\nprint(a - b)  # Subtraction: 7\nprint(a * b)  # Multiplication: 30\nprint(a / b)  # Division: 3.3333...\nprint(a // b) # Integer Division: 3\nprint(a ** b) # Exponentiation: 1000\n\n\n1.5.2 String Operations\nfirst_name = \"Rudolph\"\nlast_name = \"Diesel\"\nfull_name = first_name + \" \" + last_name  # Concatenation using +\nprint(full_name)  # Output: Rudolph Diesel\nprint(f\"{first_name} {last_name}\")  # Concatenation using f-string\nprint(full_name * 2)  # Repetition: Rudolph DieselRudolph Diesel\nprint(full_name.upper())  # Uppercase: RUDOLPH DIESEL\nNote: String repetition (*) concatenates the string multiple times without spaces. For example, full_name * 2 produces Rudolph DieselRudolph Diesel.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#python-as-a-calculator-in-interactive-mode",
    "href": "tutorial_basic.html#python-as-a-calculator-in-interactive-mode",
    "title": "1  Python Tutorial",
    "section": "1.6 Python as a Calculator in Interactive Mode",
    "text": "1.6 Python as a Calculator in Interactive Mode\nPython’s interactive mode allows you to enter commands and see results immediately, ideal for quick calculations. To start, open a terminal (on macOS, Linux, or Windows) and type:\npython3  # Use 'python' on Windows if 'python3' is not recognized\nYou should see the Python prompt:\n&gt;&gt;&gt;\nEnter expressions and press Enter to see results:\n2 + 3  # Output: 5\n7 - 4  # Output: 3\n6 * 9  # Output: 54\n8 / 2  # Output: 4.0\n8 // 2 # Output: 4\n2 ** 3 # Output: 8\n\n1.6.1 Parentheses for Grouping\n(2 + 3) * 4  # Output: 20\n2 + (3 * 4)  # Output: 14\n\n\n1.6.2 Variables\nx = 10\ny = 3\nx / y  # Output: 3.3333333333333335\n\n\n1.6.3 Exiting Interactive Mode\nTo exit, type:\nexit()\nAlternatively, use: - Ctrl+D (macOS/Linux) - Ctrl+Z then Enter (Windows)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#control-flow",
    "href": "tutorial_basic.html#control-flow",
    "title": "1  Python Tutorial",
    "section": "1.7 Control Flow",
    "text": "1.7 Control Flow\nControl flow statements direct the execution of code based on conditions.\n\n1.7.1 Conditional Statements\nConditional statements allow you to execute different code blocks based on specific conditions. Python provides three keywords for this purpose:\n\nif: Evaluates a condition and executes its code block if the condition is True.\nelif: Short for “else if,” it checks an additional condition if the preceding if or elif conditions are False. You can use multiple elif statements to test multiple conditions sequentially, and Python will execute the first True condition’s block, skipping the rest.\nelse: Executes a code block if none of the preceding if or elif conditions are True. It serves as a fallback and does not require a condition.\n\nThe following example uses age to categorize a person as a Minor, Adult, or Senior, demonstrating how if, elif, and else work together.\n# Categorize a person based on their age\nage = 19\nif age &lt; 18:\n    print(\"Minor\")\nelif age &lt;= 64:\n    print(\"Adult\")\nelse:\n    print(\"Senior\")\nOutput: Adult\n\n\n1.7.2 For Loop\nA for loop iterates over a sequence (e.g., list or string).\ncomponents = [\"piston\", \"liner\", \"connecting rod\"]\nfor component in components:\n    print(component)\nOutput:\npiston\nliner\nconnecting rod\n\n\n1.7.3 While Loop\nA while loop executes as long as a condition is true. Ensure the condition eventually becomes false to avoid infinite loops.\ncount = 0\nwhile count &lt;= 5:\n    print(count)\n    count += 1\nOutput:\n0\n1\n2\n3\n4\n5",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#functions",
    "href": "tutorial_basic.html#functions",
    "title": "1  Python Tutorial",
    "section": "1.8 Functions",
    "text": "1.8 Functions\n\n1.8.1 The def Keyword\nFunctions are reusable code blocks defined using the def keyword. They can include default parameters for optional arguments.\ndef add(a, b=0):\n    return a + b\nprint(add(5))      # Output: 5\nprint(add(5, 3))   # Output: 8\n\ndef multiply(*args):\n    result = 1\n    for num in args:\n        result *= num\n    return result\nprint(multiply(2, 3, 4))  # Output: 24\n\n\n1.8.2 The lambda Keyword\nThe lambda keyword creates anonymous functions for short, one-off operations, often used in functional programming.\ncelsius_to_fahrenheit = lambda c: (c * 9 / 5) + 32\nprint(celsius_to_fahrenheit(25))  # Output: 77.0",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#the-math-module",
    "href": "tutorial_basic.html#the-math-module",
    "title": "1  Python Tutorial",
    "section": "1.9 The math Module",
    "text": "1.9 The math Module\nThe math module provides mathematical functions and constants.\nimport math\nprint(math.sqrt(16))  # Output: 4.0\nprint(math.pi)        # Output: 3.141592653589793\nimport math\nangle = math.pi / 4  # 45 degrees in radians\nprint(math.sin(angle))  # Output: 0.7071067811865475 (approximately √2/2)\nprint(math.cos(angle))  # Output: 0.7071067811865476 (approximately √2/2)\nprint(math.tan(angle))  # Output: 1.0\nNote: Floating-point arithmetic may result in small precision differences, as seen in the sin and cos outputs.\nimport math\nprint(math.log(10))       # Natural logarithm of 10: 2.302585092994046\nprint(math.log(100, 10))  # Logarithm of 100 with base 10: 2.0\n\n1.9.1 Converting Between Radians and Degrees\nThe math module provides math.radians() to convert degrees to radians and math.degrees() to convert radians to degrees, which is useful for trigonometric calculations.\nimport math\ndegrees = 180\nradians = math.radians(degrees)\nprint(f\"{degrees} degrees is {radians:.3f} radians\")  # Output: 180 degrees is 3.142 radians\n\nradians = math.pi / 2\ndegrees = math.degrees(radians)\nprint(f\"{radians:.3f} radians is {degrees:.1f} degrees\")  # Output: 1.571 radians is 90.0 degrees",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#writing-python-scripts",
    "href": "tutorial_basic.html#writing-python-scripts",
    "title": "1  Python Tutorial",
    "section": "1.10 Writing Python Scripts",
    "text": "1.10 Writing Python Scripts\nWrite Python code in a .py file and run it as a script. Create a file named script.py:\n# script.py\nimport math\nprint(\"Square root of 16 is:\", math.sqrt(16))\nprint(\"Value of pi is:\", math.pi)\nprint(\"Sine of 90 degrees is:\", math.sin(math.pi / 2))\nprint(\"Natural logarithm of 10 is:\", math.log(10))\nprint(\"Logarithm of 100 with base 10 is:\", math.log(100, 10))\nTo run the script, open a terminal, navigate to the directory containing script.py using the cd command (e.g., cd /path/to/directory), and type:\npython3 script.py  # or python script.py on Windows\nOutput:\nSquare root of 16 is: 4.0\nValue of pi is: 3.141592653589793\nSine of 90 degrees is: 1.0\nNatural logarithm of 10 is: 2.302585092994046\nLogarithm of 100 with base 10 is: 2.0",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "tutorial_basic.html#summary",
    "href": "tutorial_basic.html#summary",
    "title": "1  Python Tutorial",
    "section": "1.11 Summary",
    "text": "1.11 Summary\nThis tutorial covered Python basics, including syntax, variables, data types, operations, control flow, and functions. Python’s rich ecosystem includes libraries like:\n\nNumPy: For numerical computations and array manipulations.\nMatplotlib: For data visualization and plotting.\nPandas: For data manipulation and analysis with tabular data structures.\nPint: For handling physical quantities and performing unit conversions.\n\nYou can explore these libraries to enhance your Python programming skills further. For example installing them can be done using pip:\npip install numpy matplotlib pandas pint\npip is Python’s package manager for installing and managing additional libraries.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Python Tutorial</span>"
    ]
  },
  {
    "objectID": "si_units.html",
    "href": "si_units.html",
    "title": "2  SI Units",
    "section": "",
    "text": "2.1 Condenser Vacuum\nCondenser vacuum gauge reads 715 mmHg when barometer stands at 757 mmHg. State the absolute pressure in kN/m² and bar.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>SI Units</span>"
    ]
  },
  {
    "objectID": "si_units.html#condenser-vacuum",
    "href": "si_units.html#condenser-vacuum",
    "title": "2  SI Units",
    "section": "",
    "text": "2.1.1 Given Data\n\\[\nP_{atm} = 757~\\text{mmHg}, \\quad P_{vac} = 715~\\text{mmHg}\n\\]\n\n\n2.1.2 Absolute Pressure in mmHg\n\\[\nP_{abs} = P_{atm} - P_{vac} = 757 - 715 = 42~\\text{mmHg}\n\\]\n\n\n2.1.3 Convert mmHg → kN/m²\n\\[\nP = \\rho g h = 13{,}600 \\cdot 9.81 \\cdot 0.001 = 133.416~\\text{Pa} = 0.133416~\\text{kN/m}^2\n\\]\n\\[\nP_{abs} = 42 \\cdot 0.133416 = 5.6034~\\text{kN/m²}\n\\]\n\n\n2.1.4 Convert kN/m² → bar\n\\[\nP_{abs} = \\frac{5.6034}{100} = 0.056~\\text{bar}\n\\]\n\n\n2.1.5 Final Answers\n\\[\n\\boxed{P_{abs} = 42~\\text{mmHg} = 5.6034~\\text{kN/m²} = 0.056~\\text{bar}}\n\\]\n\n\n2.1.6 Code\nP_atm_mmHg = 757\nP_vac_mmHg = 715\nMMHG_TO_KN_M2 = 0.133416\nKNM2_TO_BAR = 1 / 100\nP_abs_mmHg = P_atm_mmHg - P_vac_mmHg\nP_abs_kNm2 = P_abs_mmHg * MMHG_TO_KN_M2\nP_abs_bar = P_abs_kNm2 * KNM2_TO_BAR\nprint(f\"Absolute Pressure = {P_abs_mmHg:.2f} mmHg\")\nprint(f\"Absolute Pressure = {P_abs_kNm2:.3f} kN/m²\")\nprint(f\"Absolute Pressure = {P_abs_bar:.4f} bar\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>SI Units</span>"
    ]
  },
  {
    "objectID": "si_units.html#oil-flow-in-tubes",
    "href": "si_units.html#oil-flow-in-tubes",
    "title": "2  SI Units",
    "section": "2.2 Oil Flow in Tubes",
    "text": "2.2 Oil Flow in Tubes\nOil flows full bore at a velocity of \\(V = 2~\\text{m/s}\\) through 16 tubes of diameter \\(d = 30~\\text{mm}\\). Density of oil: \\(\\rho = 0.85~\\text{g/mL}\\). Find volume flow rate (L/s) and mass flow rate (kg/min).\n\n2.2.1 Cross-sectional area of one tube\n\\[\nA = \\pi \\frac{d^2}{4} = \\pi \\frac{0.03^2}{4} \\approx 7.0686 \\times 10^{-4}~\\text{m}^2\n\\]\n\n\n2.2.2 Total area and volume flow rate\n\\[\nA_\\text{total} = 16 \\cdot 7.0686 \\times 10^{-4} \\approx 0.01131~\\text{m}^2\n\\]\n\\[\n\\dot{v} = A_\\text{total} \\cdot V \\approx 0.02262~\\text{m}^3/\\text{s} \\approx 22.62~\\text{L/s}\n\\]\n\n\n2.2.3 Mass flow rate\n\\[\n\\dot{m} = \\rho \\cdot \\dot{v} = 850 \\cdot 0.02262 \\approx 19.227~\\text{kg/s} \\approx 1153.6~\\text{kg/min}\n\\]\n\n\n2.2.4 Final Answers\n\\[\n\\text{Volume flow rate: } \\dot{v} \\approx 22.6~\\text{L/s}\n\\] \\[\n\\text{Mass flow rate: } \\dot{m} \\approx 1154~\\text{kg/min}\n\\]\n\n\n2.2.5 Code\nimport math\nv = 2.0\nN = 16\nd = 0.03\nrho = 0.85 * 1000\nA = math.pi * d**2 / 4\nA_total = N * A\nv_dot_m3_s = A_total * v\nv_dot_L_s = Q_m3_s * 1000\nm_dot_kg_s = rho * Q_m3_s\nm_dot_kg_min = m_dot_kg_s * 60\nprint(f\"Volume flow rate: {v_dot_L_s:.2f} L/s\")\nprint(f\"Mass flow rate: {m_dot_kg_min:.2f} kg/min\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>SI Units</span>"
    ]
  },
  {
    "objectID": "si_units.html#gauge-pressure",
    "href": "si_units.html#gauge-pressure",
    "title": "2  SI Units",
    "section": "2.3 Gauge Pressure",
    "text": "2.3 Gauge Pressure\nAn oil of specific gravity (relative density) \\(\\text{SG} = 0.8\\) is contained in a vessel to a depth of \\(h = 2 \\text{ m}\\). Find the gauge pressure at this depth in kPa.\n\n2.3.1 Gauge Pressure\n\\[\nP_g = \\rho g h\n\\]\nwhere\n\\(\\rho = \\text{density of fluid (kg/m³)}\\)\ng= acceleration due to gravity (9.81 m/s²)\nh = depth (m)\n\n\n2.3.2 Compute the density of oil using specific gravity\nSpecific gravity is defined as\n\\[\n\\text{SG} = \\frac{\\rho_{\\text{oil}}}{\\rho_{\\text{water}}}\n\\]\nwhere \\(\\rho_{\\text{water}} = 1000 \\text{ kg/m³}\\). Thus,\n\\[\n\\rho_{\\text{oil}} = \\text{SG} \\times \\rho_{\\text{water}} = 0.8 \\times 1000 = 800\\ \\text{kg/m³}\n\\]\n\n\n2.3.3 Compute the gauge pressure\n\\[\nP_g = \\rho g h = 800 \\times 9.81 \\times 2\n\\]\n\\[\nP_g = 15696\\ \\text{Pa} \\approx 15.7\\ \\text{kPa}\n\\]\n\n\n2.3.4 Answer\nThe gauge pressure at a depth of 2 m in the oil is:\n\\[\n\\boxed{15.7\\ \\text{kPa}}\n\\]\n\n\n2.3.5 Code\n# Gauge Pressure Calculation for Oil\n\n# Given data\nspecific_gravity = 0.8  # SG of oil\ndepth_m = 2.0           # depth in meters\ng = 9.81                # acceleration due to gravity in m/s²\nrho_water = 1000        # density of water in kg/m³\n\n# Compute density of oil\nrho_oil = specific_gravity * rho_water\n\n# Compute gauge pressure (Pa)\nP_g_Pa = rho_oil * g * depth_m\n\n# Convert to kPa\nP_g_kPa = P_g_Pa / 1000\n\n# Print results\nprint(f\"Density of oil: {rho_oil:.1f} kg/m³\")\nprint(f\"Gauge pressure at {depth_m} m depth: {P_g_Pa:.1f} Pa ({P_g_kPa:.2f} kPa)\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>SI Units</span>"
    ]
  },
  {
    "objectID": "si_units.html#absolute-pressure-from-manometer-reading",
    "href": "si_units.html#absolute-pressure-from-manometer-reading",
    "title": "2  SI Units",
    "section": "2.4 Absolute Pressure from Manometer Reading",
    "text": "2.4 Absolute Pressure from Manometer Reading\nA water manometer shows a pressure in a vessel of \\(400\\ \\text{mm}\\) below atmospheric pressure. The atmospheric pressure is measured as \\(763\\ \\text{mmHg}\\). Determine the absolute pressure in the vessel in kPa.\n\n2.4.1 Relationship between absolute and gauge pressure\n\\[\nP_\\text{abs} = P_\\text{atm} + P_\\text{gauge}\n\\]\nSince the manometer shows a pressure below atmospheric, the gauge pressure is negative:\n\\[\nP_\\text{gauge} = - \\rho_\\text{water} g h\n\\]\n\n\n2.4.2 Convert atmospheric pressure to Pa using\n\\[\nP = \\rho g h = 13{,}600 \\cdot 9.81 \\cdot 0.001 = 133.416~\\text{Pa}\n\\]\nSo\n\\[\nP_\\text{atm} = 763 \\times 133.416 \\approx 101,801\\ \\text{Pa} \\approx 101.8\\ \\text{kPa}\n\\]\n\n\n2.4.3 Compute gauge pressure\nWater column height:\n\\[\nh = 400\\ \\text{mm} = 0.4\\ \\text{m}\n\\]\nDensity of water: \\(rho_\\text{water} = 1000\\ \\text{kg/m³}\\), \\(g = 9.81\\ \\text{m/s²}\\)\n\\[\nP_\\text{gauge} = - \\rho g h = - 1000 \\times 9.81 \\times 0.4\n\\]\n\\[\nP_\\text{gauge} = -3924\\ \\text{Pa} \\approx -3.92\\ \\text{kPa}\n\\]\n\n\n2.4.4 Compute absolute pressure\n\\[\nP_\\text{abs} = P_\\text{atm} + P_\\text{gauge} \\approx 101.8 - 3.92 \\approx 97.9\\ \\text{kPa}\n\\]\n\n\n2.4.5 Answer\nThe absolute pressure in the vessel is:\n\\[\n\\boxed{97.9\\ \\text{kPa}}\n\\]\n\n\n2.4.6 Code\n# Absolute Pressure Calculation from Water Manometer\n\n# Given data\nh_mm = 400               # manometer reading in mm (below atmospheric)\natm_mmHg = 763           # atmospheric pressure in mmHg\nrho_water = 1000         # density of water in kg/m³\ng = 9.81                 # gravity in m/s²\nmmHg_to_Pa = 133.416     # conversion factor\n\n# Convert manometer height to meters\nh_m = h_mm / 1000\n\n# Convert atmospheric pressure to Pa\nP_atm_Pa = atm_mmHg * mmHg_to_Pa\n\n# Gauge pressure (negative because below atmospheric)\nP_gauge_Pa = - rho_water * g * h_m\n\n# Absolute pressure\nP_abs_Pa = P_atm_Pa + P_gauge_Pa\n\n# Convert to kPa\nP_abs_kPa = P_abs_Pa / 1000\n\n# Print results\nprint(f\"Atmospheric pressure: {P_atm_Pa:.1f} Pa ({P_atm_Pa/1000:.1f} kPa)\")\nprint(f\"Gauge pressure: {P_gauge_Pa:.1f} Pa ({P_gauge_Pa/1000:.2f} kPa)\")\nprint(f\"Absolute pressure in the vessel: {P_abs_Pa:.1f} Pa ({P_abs_kPa:.2f} kPa)\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>SI Units</span>"
    ]
  },
  {
    "objectID": "heat_work.html",
    "href": "heat_work.html",
    "title": "3  Heat and Work",
    "section": "",
    "text": "3.1 Heat Required to Heat Steel\nA steel block of mass \\(m = 5\\ \\text{kg}\\) and specific heat capacity \\(c = 480\\ \\text{J/kg·K}\\) is heated from \\(T_1 = 15^\\circ \\text{C}\\) to \\(T_2 = 100^\\circ \\text{C}\\). Determine the heat required.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Heat and Work</span>"
    ]
  },
  {
    "objectID": "heat_work.html#heat-required-to-heat-steel",
    "href": "heat_work.html#heat-required-to-heat-steel",
    "title": "3  Heat and Work",
    "section": "",
    "text": "3.1.1 The formula for heat\n\\[\nQ = m c \\Delta T\n\\tag{3.1}\\]\nwhere\n\n\\(\\Delta T = T_2 - T_1\\) is the temperature change.\n\n\n3.1.2 Compute the temperature change\n\\[\n\\Delta T = T_2 - T_1 = 100 - 15 = 85\\ \\text{K}\n\\]\n\n\n3.1.3 Compute the heat required\n\\[\nQ = m c \\Delta T = 5 \\times 480 \\times 85\n\\]\n\\[\nQ = 204,000\\ \\text{J}\n\\]\n\n\n3.1.4 Answer\nThe heat required to raise the temperature of the steel is:\n\\[\n\\boxed{204\\ \\text{kJ}}\n\\]\n\n\n3.1.5 Code\n# Heat Required to Heat Steel\n\n# Given data\nmass = 5            # kg\nspecific_heat = 480 # J/kg·K\nT_initial = 15      # °C\nT_final = 100       # °C\n\n# Temperature change\ndelta_T = T_final - T_initial\n\n# Heat required (in J)\nQ_J = mass * specific_heat * delta_T\n\n# Convert to kJ\nQ_kJ = Q_J / 1000\n\n# Print results\nprint(f\"Temperature change: {delta_T} K\")\nprint(f\"Heat required: {Q_J:.0f} J ({Q_kJ:.0f} kJ)\")\n# Interactive Heat Calculation\n\n# Get user input\nmass = float(input(\"Enter the mass of the object (kg): \"))\nspecific_heat = float(input(\"Enter the specific heat capacity (J/kg·K): \"))\nT_initial = float(input(\"Enter the initial temperature (°C): \"))\nT_final = float(input(\"Enter the final temperature (°C): \"))\n\n# Calculate temperature change\ndelta_T = T_final - T_initial\n\n# Calculate heat required\nQ_J = mass * specific_heat * delta_T\nQ_kJ = Q_J / 1000\n\n# Display results\nprint(\"\\nCalculation Results:\")\nprint(f\"Temperature change: {delta_T:.2f} K\")\nprint(f\"Heat required: {Q_J:.2f} J ({Q_kJ:.2f} kJ)\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Heat and Work</span>"
    ]
  },
  {
    "objectID": "heat_work.html#finding-specific-heat-capacity",
    "href": "heat_work.html#finding-specific-heat-capacity",
    "title": "3  Heat and Work",
    "section": "3.2 Finding Specific Heat Capacity",
    "text": "3.2 Finding Specific Heat Capacity\nA liquid of mass \\(m = 4\\ \\text{kg}\\) is heated from \\(T_1 = 15^\\circ \\text{C}\\) to \\(T_2 = 100^\\circ \\text{C}\\). The heat supplied is \\(Q = 714\\ \\text{kJ}\\). Determine the specific heat capacity \\(c\\) of the liquid.\n\n3.2.1 Recall the formula for heat\n\\[\nQ = m c \\Delta T\n\\]\nwhere \\(\\Delta T = T_2 - T_1\\).\n\n\n3.2.2 Convert heat to joules\n\\[\nQ = 714\\ \\text{kJ} = 714 \\times 1000 = 714,000\\ \\text{J}\n\\]\n\n\n3.2.3 Compute temperature change\n\\[\n\\Delta T = T_2 - T_1 = 100 - 15 = 85\\ \\text{K}\n\\]\n\n\n3.2.4 Solve for specific heat capacity\n\\[\nc = \\frac{Q}{m \\Delta T} = \\frac{714,000}{4 \\times 85}\n\\]\n\\[\nc = \\frac{714,000}{340} \\approx 2100\\ \\text{J/kg·K}\n\\]\n\n\n3.2.5 Answer\nThe specific heat capacity of the liquid is:\n\\[\n\\boxed{c \\approx 2100\\ \\text{J/kg·K}}\n\\]\n\n\n3.2.6 Code\n# Specific Heat Capacity Calculation\n\n# Given data\nmass = 4          # kg\nT_initial = 15    # °C\nT_final = 100     # °C\nQ_kJ = 714        # heat supplied in kJ\n\n# Convert heat to joules\nQ_J = Q_kJ * 1000\n\n# Temperature change\ndelta_T = T_final - T_initial\n\n# Calculate specific heat capacity\nc = Q_J / (mass * delta_T)\n\n# Print results\nprint(f\"Temperature change: {delta_T} K\")\nprint(f\"Specific heat capacity: {c:.0f} J/kg·K\")\n# Interactive Specific Heat Capacity Calculator\n\n# Get user input\nmass = float(input(\"Enter the mass of the liquid (kg): \"))\nT_initial = float(input(\"Enter the initial temperature (°C): \"))\nT_final = float(input(\"Enter the final temperature (°C): \"))\nQ_kJ = float(input(\"Enter the heat supplied (kJ): \"))\n\n# Convert heat to joules\nQ_J = Q_kJ * 1000\n\n# Temperature change\ndelta_T = T_final - T_initial\n\n# Calculate specific heat capacity\nc = Q_J / (mass * delta_T)\n\n# Display results\nprint(\"\\nCalculation Results:\")\nprint(f\"Temperature change: {delta_T:.2f} K\")\nprint(f\"Specific heat capacity: {c:.2f} J/kg·K\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Heat and Work</span>"
    ]
  },
  {
    "objectID": "heat_work.html#work-done-by-fluid-in-cylinder",
    "href": "heat_work.html#work-done-by-fluid-in-cylinder",
    "title": "3  Heat and Work",
    "section": "3.3 Work Done by Fluid in Cylinder",
    "text": "3.3 Work Done by Fluid in Cylinder\nA fluid in a cylinder is at pressure \\(P = 700\\ \\text{kPa}\\). It is expanded at constant pressure from a volume of \\(V_1 = 0.28\\ \\text{m³}\\) to \\(V_2 = 1.68\\ \\text{m³}\\). Determine the work done.\n\n3.3.1 The formula for work done at constant pressure\n\\[\nW = P \\Delta V\n\\tag{3.2}\\]\nwhere\n\\[\n\\Delta V = V_2 - V_1\n\\]\n\n\n3.3.2 Compute the change in volume\n\\[\n\\Delta V = 1.68 - 0.28 = 1.40\\ \\text{m³}\n\\]\n\n\n3.3.3 Convert pressure to Pa\n\\[\nP = 700\\ \\text{kPa} = 700 \\times 10^3\\ \\text{Pa} = 700,000\\ \\text{Pa}\n\\]\n\n\n3.3.4 Compute the work done\n\\[\nW = P \\Delta V = 700,000 \\times 1.40\n\\]\n\\[\nW = 980,000\\ \\text{J} \\approx 980\\ \\text{kJ}\n\\]\n\n\n3.3.5 Answer\nThe work done by the fluid during expansion is:\n\\[\n\\boxed{980\\ \\text{kJ}}\n\\]\n\n\n3.3.6 Code\n# Work Done by Fluid at Constant Pressure\n\n# Given data\nP_kPa = 700          # pressure in kPa\nV1 = 0.28            # initial volume in m³\nV2 = 1.68            # final volume in m³\n\n# Convert pressure to Pa\nP_Pa = P_kPa * 1000\n\n# Compute change in volume\ndelta_V = V2 - V1\n\n# Compute work done (J)\nW_J = P_Pa * delta_V\n\n# Convert to kJ\nW_kJ = W_J / 1000\n\n# Print results\nprint(f\"Pressure: {P_Pa} Pa\")\nprint(f\"Change in volume: {delta_V:.2f} m³\")\nprint(f\"Work done: {W_J:.0f} J ({W_kJ:.0f} kJ)\")\n# Interactive Work Done Calculator\n\n# Get user input\nP_kPa = float(input(\"Enter the constant pressure (kPa): \"))\nV1 = float(input(\"Enter the initial volume (m³): \"))\nV2 = float(input(\"Enter the final volume (m³): \"))\n\n# Convert pressure to Pa\nP_Pa = P_kPa * 1000\n\n# Compute change in volume\ndelta_V = V2 - V1\n\n# Compute work done (J)\nW_J = P_Pa * delta_V\n\n# Convert to kJ\nW_kJ = W_J / 1000\n\n# Display results\nprint(\"\\nCalculation Results:\")\nprint(f\"Pressure: {P_Pa:.0f} Pa ({P_kPa:.0f} kPa)\")\nprint(f\"Change in volume: {delta_V:.2f} m³\")\nprint(f\"Work done: {W_J:.0f} J ({W_kJ:.2f} kJ)\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Heat and Work</span>"
    ]
  },
  {
    "objectID": "heat_work.html#enthalpy-calculation",
    "href": "heat_work.html#enthalpy-calculation",
    "title": "3  Heat and Work",
    "section": "3.4 Enthalpy Calculation",
    "text": "3.4 Enthalpy Calculation\n120 kg of steam at \\(p = 1000 \\text{kPa}\\) and \\(T = 200^\\circ\\text{C}\\) has internal energy \\(u = 2623 \\text{kJ/kg}\\) and specific volume \\((v = 0.2061 \\text{ m}^3/\\text{kg}\\) Calculate the specific enthalpy (h) and the total enthalpy for the 120-kg mass.\nGiven for steam:\n\nmass \\(m = 120 \\text{ kg}\\)\npressure \\(P = 1000 \\text{ kPa}\\)\ntemperature \\(T = 200^\\circ\\text{C}\\) (not needed for calculation)\ninternal energy \\(u = 2623 \\text{ kJ/kg}\\)\nspecific volume \\(v = 0.2061 \\text{ m}^3/ \\text{kg}\\)\n\nThe specific enthalpy is \\[\nh = u + Pv\n\\tag{3.3}\\]\nNote: with (P) in kPa and (v) in m(^3)/kg, the product (Pv) has units kJ/kg (since (1 ^3 = 1 )).\nCompute (Pv): \\[\nPv = 1000\\times 0.2061 = 206.1\\ \\text{kJ/kg}\n\\]\nSo the specific enthalpy is: \\[\nh = 2623 + 206.1 = 2829.1\\ \\text{kJ/kg}\n\\]\nTotal enthalpy for the 120 kg of steam: \\[\nH = m\\,h = 120\\times 2829.1 = 339{,}492\\ \\text{kJ}\n\\]\n\n3.4.1 Answers\n\nSpecific enthalpy: \\(\\boxed{h = 2829.1\\ \\text{kJ/kg}}\\)\nTotal enthalpy for 120 kg: \\(\\boxed{H = 339{,}492\\ \\text{kJ}}\\)\n\n\n\n3.4.2 Code\n# Given data\nm = 120          # kg\nP = 1000         # kPa\nu = 2623         # kJ/kg\nv = 0.2061       # m³/kg\n\n# Enthalpy calculation\nh = u + P * v          # kJ/kg\nH_total = m * h        # kJ\n\nprint(f\"Specific enthalpy h = {h:.1f} kJ/kg\")\nprint(f\"Total enthalpy H = {H_total:,.0f} kJ\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Heat and Work</span>"
    ]
  },
  {
    "objectID": "thermal_expansion.html",
    "href": "thermal_expansion.html",
    "title": "4  Thermal Expansion",
    "section": "",
    "text": "4.1 Linear Expansion\nThermal expansion is the tendency of materials to change their shape, area, and volume in response to a change in temperature. When most substances are heated, their particles move more vigorously and tend to occupy more space, leading to an increase in dimensions. Conversely, when substances are cooled, they generally contract. This phenomenon occurs in solids, liquids, and gases, although the degree and nature of expansion vary depending on the material’s state and properties.\nThis occurs along a specific dimension or direction, primarily in long, narrow objects (like rods or beams). When the temperature of a solid object increases, its length expands by an amount proportional to its original length and the temperature change. The equation for linear expansion is:\n\\[\n\\Delta L = \\alpha L_0 \\Delta T\n\\tag{4.1}\\] where:",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Thermal Expansion</span>"
    ]
  },
  {
    "objectID": "thermal_expansion.html#linear-expansion",
    "href": "thermal_expansion.html#linear-expansion",
    "title": "4  Thermal Expansion",
    "section": "",
    "text": "\\(\\Delta L\\) is the change in length,\n\\(\\alpha\\) is the coefficient of linear expansion (unique to each material),\n\\(L_0\\) is the original length, and\n\\(\\Delta T\\) is the temperature change.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Thermal Expansion</span>"
    ]
  },
  {
    "objectID": "thermal_expansion.html#superficial-expansion",
    "href": "thermal_expansion.html#superficial-expansion",
    "title": "4  Thermal Expansion",
    "section": "4.2 Superficial Expansion",
    "text": "4.2 Superficial Expansion\nApplicable to two-dimensional surfaces, such as sheets or plates. Here, both length and width expand, leading to an increase in surface area. The formula for area expansion is: \\[\n\\Delta A = 2 \\alpha A_0 \\Delta T\n\\tag{4.2}\\] where:\n\n\\(\\Delta A\\) is the change in area,\n\\(A_0\\) is the initial area, and\n\\(\\Delta T\\) is the temperature change.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Thermal Expansion</span>"
    ]
  },
  {
    "objectID": "thermal_expansion.html#volumetric-expansion",
    "href": "thermal_expansion.html#volumetric-expansion",
    "title": "4  Thermal Expansion",
    "section": "4.3 Volumetric Expansion",
    "text": "4.3 Volumetric Expansion\nRelevant for three-dimensional objects (like solids, liquids, and gases). The volume of an object expands with temperature, especially in fluids where this effect is more pronounced. The formula is: \\[\n\\Delta V = \\beta V_0 \\Delta T\n\\tag{4.3}\\]\nwhere:\n\n\\(\\Delta V\\) is the change in volume,\n\\(\\beta\\) is the coefficient of volumetric expansion, which is approximately three times the linear expansion coefficient for isotropic solids,\n\\(V_0\\) is the initial volume, and\n\\(\\Delta T\\) is the temperature change.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Thermal Expansion</span>"
    ]
  },
  {
    "objectID": "heat_transfer.html",
    "href": "heat_transfer.html",
    "title": "5  Heat Transfer",
    "section": "",
    "text": "5.1 Conduction\nThis method transfers heat through direct contact, as faster-vibrating molecules pass energy to slower ones. In solids, heat moves from molecule to molecule, and between objects in contact, it flows from the hotter to the cooler one until temperatures equalize.\nAn example of conduction is an iron bar having one end in contact with a flame. The other end will soon become hot due to the conduction of heat from molecule to molecule through the iron.\n\\[\nQ=\\frac{kAt\\Delta T}{s}\n\\tag{5.1}\\]",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Heat Transfer</span>"
    ]
  },
  {
    "objectID": "heat_transfer.html#convection",
    "href": "heat_transfer.html#convection",
    "title": "5  Heat Transfer",
    "section": "5.2 Convection",
    "text": "5.2 Convection\nConvection transfers heat through the movement of fluids (liquids or gases). When a fluid is heated, it expands, becomes less dense, and rises, while cooler, denser fluid moves in to replace it—creating a convection current that spreads heat.\nNatural convection occurs without mechanical aid, while forced convection uses devices like pumps or fans.\nIf fluid movement is created by a pump or a fan, heat is being transferred by forced convection. Examples are a pump circulating hot water through a building heating system, a fan forcing air through an automobile radiator, or a forced draft fan pushing hot gases through a boiler.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Heat Transfer</span>"
    ]
  },
  {
    "objectID": "heat_transfer.html#radiation",
    "href": "heat_transfer.html#radiation",
    "title": "5  Heat Transfer",
    "section": "5.3 Radiation",
    "text": "5.3 Radiation\nRadiation transfers heat through electromagnetic waves that travel in straight lines and can pass through a vacuum. When these waves strike a surface, they may be absorbed (increasing temperature), reflected, or transmitted. Dark, rough surfaces absorb more radiation, while shiny, smooth ones reflect it.\nExamples include heat from the sun reaching Earth and radiant heat in a boiler furnace.\nIn a steam boiler, radiation occurs in the furnace. Any heating surfaces that are directly exposed to the furnace will receive heat directly by radiation from the flame. These include the waterwalls and some generating tubes of a watertube boiler, radiant superheater tubes (located at the outlet of the furnace), and the furnace walls of a firetube boiler.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Heat Transfer</span>"
    ]
  },
  {
    "objectID": "perfect_gases.html",
    "href": "perfect_gases.html",
    "title": "6  Perfect Gases",
    "section": "",
    "text": "6.1 Boyle’s Law\nThe terms “perfect gas” and “ideal gas” are often used interchangeably in physics and engineering, but “ideal gas” is the more standard term in modern scientific literature.\nAn ideal gas is a theoretical model that remains in the gaseous state under all conditions, as it does not account for phase changes such as condensation. Real gases, such as nitrogen, oxygen, and dry air, are often approximated as ideal gases under typical conditions (e.g., low pressures and high temperatures relative to their critical points), but they may condense under extreme conditions. Saturated steam, being at the liquid-vapor phase boundary, does not behave as an ideal gas due to significant intermolecular forces, whereas superheated steam approximates ideal gas behavior when sufficiently far from its condensation point.\nIn an ideal gas, pressure, temperature, and volume are interrelated, enabling the calculation of changes in one property based on the others. These relationships are governed by Boyle’s Law, Charles’s Law, and the ideal gas law, which collectively describe the behavior of an ideal gas under varying conditions.\nRobert Boyle (1627–1691), a physicist, investigated the behavior of an ideal gas at constant temperature. By controlling the addition or removal of heat during changes in the volume and pressure of a confined gas, he maintained a constant temperature. He discovered that, under these conditions, the absolute pressure of a gas is inversely proportional to its volume. That is, as the volume increases, the pressure decreases, and conversely, as the volume decreases, the pressure increases. This can be stated as:\\index{Boyle’s Law}.\n\\[\nP\\propto\\frac{1}{V}\n\\tag{6.1}\\]",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Perfect Gases</span>"
    ]
  },
  {
    "objectID": "perfect_gases.html#charless-law",
    "href": "perfect_gases.html#charless-law",
    "title": "6  Perfect Gases",
    "section": "6.2 Charles’s Law",
    "text": "6.2 Charles’s Law\nCharles’s Law, named after Jacques Charles (1746–1823), a French physicist, states that for an ideal gas maintained at constant pressure, the volume of the gas is directly proportional to its absolute temperature (measured in Kelvin). This means that as the temperature of a gas increases, its volume increases proportionally, provided the pressure remains constant. Conversely, as the temperature decreases, the volume decreases. The law assumes the gas behaves as an ideal gas. This can be stated as:\\index{Charles’s Law}.\n\\[\nV\\propto\\ T\n\\tag{6.2}\\]",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Perfect Gases</span>"
    ]
  },
  {
    "objectID": "perfect_gases.html#boyles-law-pressurevolume-relationship",
    "href": "perfect_gases.html#boyles-law-pressurevolume-relationship",
    "title": "6  Perfect Gases",
    "section": "6.3 Boyle’s Law — Pressure–Volume Relationship",
    "text": "6.3 Boyle’s Law — Pressure–Volume Relationship\nAssuming compression according to the law \\(pV = \\text{constant}\\):\n\nCalculate the final volume when \\(1 \\, \\text{m}^3\\) of gas at a pressure of \\(120 \\, \\text{kN/m}^2\\) is compressed to a pressure of \\(960 \\text{ kN/m}^2\\).\nCalculate the initial volume of a gas at a pressure of \\(1.05 \\, \\text{bar}\\) that will occupy a volume of \\(5.6 \\, \\text{m}^3\\) when it is compressed to a pressure of \\(42 \\, \\text{bar}\\).\n\n\n6.3.1 Given:\nThe compression (or expansion) follows the law:\n\\[\np_1 V_1 = p_2 V_2\n\\]\n\n\n6.3.2 Final Volume of Gas\nGiven: \\(p_1 = 120 \\text{ kN/m²}\\), \\(\\quad V_1 = 1 \\text{ m³}\\), \\(\\quad p_2 = 960 \\text{ kN/m²}\\)\nFrom \\(p_1 V_1 = p_2 V_2\\):\n\\[\nV_2 = \\frac{p_1 V_1}{p_2}\n\\]\nSubstitute:\n\\[\nV_2 = \\frac{120 \\times 1}{960} = 0.125\\ \\text{m³}\n\\]\nFinal Volume\n\\(\\boxed{V_2 = 0.125\\ \\text{m³}}\\)\n\n\n6.3.3 Initial Volume of Gas\nGiven: \\(p_1 = 1.05 \\text{ bar}\\), \\(\\quad V_2 = 5.6 \\text{ m³}\\), \\(\\quad p_2 = 42 \\text{ bar}\\)\nFrom \\(p_1 V_1 = p_2 V_2\\):\n\\[\nV_1 = \\frac{p_2 V_2}{p_1}\n\\]\nSubstitute:\n\\[\nV_1 = \\frac{42 \\times 5.6}{1.05}\n\\]\n\\[\nV_1 = 224 \\text{ m³}\n\\]\nInitial Volume\n\\(\\boxed{V_1 = 224\\ \\text{m³}}\\)\n\n\n6.3.4 Code\n# Boyle's Law Calculator (p1 * V1 = p2 * V2)\n\nprint(\"Boyle’s Law Calculator: p₁V₁ = p₂V₂\\n\")\n\n# Get known values (enter 0 for the unknown)\np1 = float(input(\"Enter initial pressure p₁ (in kN/m² or bar): \"))\nV1 = float(input(\"Enter initial volume V₁ (m³): \"))\np2 = float(input(\"Enter final pressure p₂ (in kN/m² or bar): \"))\nV2 = float(input(\"Enter final volume V₂ (m³): \"))\n\nprint()\n\n# Determine which variable is missing (the one entered as 0)\nif V2 == 0:\n    V2 = (p1 * V1) / p2\n    print(f\"Final volume V₂ = {V2:.4f} m³\")\n\nelif V1 == 0:\n    V1 = (p2 * V2) / p1\n    print(f\"Initial volume V₁ = {V1:.4f} m³\")\n\nelif p2 == 0:\n    p2 = (p1 * V1) / V2\n    print(f\"Final pressure p₂ = {p2:.4f}\")\n\nelif p1 == 0:\n    p1 = (p2 * V2) / V1\n    print(f\"Initial pressure p₁ = {p1:.4f}\")\n\nelse:\n    print(\"All variables entered — nothing to calculate!\")\n\nprint(\"\\nUnits:\")\nprint(\"• If you used bar, results are in bar.\")\nprint(\"• If you used kN/m², results are in kN/m².\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Perfect Gases</span>"
    ]
  },
  {
    "objectID": "perfect_gases.html#compression-stroke-volume-and-final-temperature",
    "href": "perfect_gases.html#compression-stroke-volume-and-final-temperature",
    "title": "6  Perfect Gases",
    "section": "6.4 Compression — Stroke Volume and Final Temperature",
    "text": "6.4 Compression — Stroke Volume and Final Temperature\nA gas is compressed in a cylinder from \\(p_1=1\\ \\text{bar}\\) and \\(_1=35^\\circ\\text{C}\\) at the beginning of the stroke to \\(p_2=37\\ \\text{bar}\\) at the end of the stroke. The clearance volume is \\(V_c=850\\ \\text{cm}^3\\). The compression index is \\(n=1.32\\). Find the stroke (swept) volume \\(V_s\\) and the temperature at the end of compression \\(T_2\\).\n\n6.4.1 Solution\nFor a polytropic compression with \\(pV^n=\\) constant (here \\(n=1.32\\) and with clearance \\(V_c\\):\nStart of compression (BDC) volume: \\[\nV_1 = V_c + V_s\n\\]\nEnd of compression (TDC) volume: \\[\nV_2 = V_c\n\\]\nFrom \\((p_1V_1^n = p_2V_2^n)\\) we get \\[\n\\left(\\frac{V_2}{V_1}\\right)^n = \\frac{p_1}{p_2}\n\\]\nso \\[\n\\frac{V_c}{V_c+V_s} = \\left(\\frac{p_1}{p_2}\\right)^{1/n}.\n\\]\nRearrange to solve for \\(V_s\\): \\[\nV_s = V_c\\!\\left[\\left(\\frac{p_2}{p_1}\\right)^{1/n} - 1\\right].\n\\]\nSubstitute numbers (convert \\(V_c\\) to m³: 850 \\(\\text{cm}^3 = 850\\times10^{-6} \\text{m}^3 = 0.00085 \\text{m}^3\\):\n\\[\nV_s = 0.00085\\Big[\\big(\\tfrac{37}{1}\\big)^{1/1.32}-1\\Big]\n\\]\nNumerical evaluation: \\[\nV_s \\approx 0.012255\\ \\text{m}^3 = 12.26\\ \\text{L}.\n\\]\n\n\n6.4.2 Final temperature\nFor a polytropic process the temperature ratio is \\[\n\\frac{T_2}{T_1} = \\left(\\frac{p_2}{p_1}\\right)^{\\frac{n-1}{n}}.\n\\]\nConvert \\(T_1\\) to kelvin: \\(T_1=35^\\circ\\text{C}=308.15 \\text{K}\\).\n\\[\nT_2 = 308.15\\left(\\frac{37}{1}\\right)^{\\frac{1.32-1}{1.32}}\n\\]\nNumerical evaluation: \\[\nT_2 \\approx 739.49\\ \\text{K} = 466.34^\\circ\\text{C}.\n\\]\n\n\n6.4.3 Answers\n\nStroke (swept) volume: \\(\\boxed{V_s \\approx 0.01226\\ \\text{m}^3\\ (12.26\\ \\text{L})}\\)\nTemperature at end of compression: \\(\\boxed{T_2 \\approx 739.5\\ \\text{K} \\;=\\;466.3^\\circ\\text{C}}\\).\n\n\n\n6.4.4 Code\n# Given data\np1 = 1       # bar\np2 = 37      # bar\nVc_cm3 = 850 # clearance volume in cm³\nn = 1.32     # compression index\nT1_C = 35    # °C\n\n# Unit conversions\nVc = Vc_cm3 * 1e-6      # m³\nT1 = T1_C + 273.15       # K\n\n# Stroke volume calculation\nVs = Vc * ((p2 / p1)**(1/n) - 1)\n\n# Final temperature calculation\nT2 = T1 * (p2 / p1)**((n - 1) / n)\nT2_C = T2 - 273.15\n\nprint(f\"Stroke volume Vs = {Vs:.5f} m³ ({Vs*1000:.2f} L)\")\nprint(f\"Final temperature T2 = {T2:.2f} K ({T2_C:.2f} °C)\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Perfect Gases</span>"
    ]
  },
  {
    "objectID": "ic_engines.html",
    "href": "ic_engines.html",
    "title": "7  IC Engines",
    "section": "",
    "text": "Internal combustion (IC) engines derive their name from fuel burning inside the engine cylinder. The combustion heats the air in the cylinder, increasing its pressure and moving the piston, whose reciprocating motion is converted to rotary motion by the crankshaft.\nIC engines are classified by their ignition method:\n\nCompression Ignition: Air is highly compressed, raising its temperature so injected fuel ignites spontaneously.\nSpark Ignition: A fuel–air mixture is compressed and then ignited by a spark plug.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>IC Engines</span>"
    ]
  },
  {
    "objectID": "ideal_cycles.html",
    "href": "ideal_cycles.html",
    "title": "8  Ideal Cycles",
    "section": "",
    "text": "8.1 Ideal Constant-Volume (Otto) Cycle\nThe Ideal Constant-Volume (Otto) Cycle, commonly referred to as the Otto cycle\\index{Otto cycle}, is a thermodynamic cycle that models the operation of a spark-ignition internal combustion engine, such as those used in gasoline-powered automobiles. It is an idealized model that assumes the working fluid is an ideal gas and describes the sequence of processes that convert thermal energy into mechanical work.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ideal Cycles</span>"
    ]
  },
  {
    "objectID": "ideal_cycles.html#ideal-constant-volume-otto-cycle",
    "href": "ideal_cycles.html#ideal-constant-volume-otto-cycle",
    "title": "8  Ideal Cycles",
    "section": "",
    "text": "8.1.1 P-V Diagram Representation\nThe Otto cycle on a P-V diagram forms a closed loop:\n\n1-2: Steep upward curve (pressure increases, volume decreases, adiabatic compression).\n2-3: Vertical line upward (pressure and temperature increase, volume constant, heat addition).\n3-4: Downward curve (pressure decreases, volume increases, adiabatic expansion).\n4-1: Vertical line downward (pressure and temperature decrease, volume constant, heat rejection).",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ideal Cycles</span>"
    ]
  },
  {
    "objectID": "ideal_cycles.html#otto-cycle-example",
    "href": "ideal_cycles.html#otto-cycle-example",
    "title": "8  Ideal Cycles",
    "section": "8.2 Otto Cycle Example",
    "text": "8.2 Otto Cycle Example\nIn an ideal constant-volume (Otto) cycle the temperature at the beginning of compression is \\(50^\\circ\\text{C}\\). The volumetric compression ratio is \\(r=5:1\\). The heat supplied during the cycle is \\(q_{in}=930 \\text{ kJ/kg}\\) of working fluid. Take \\(\\gamma = 1.4\\) and \\(c_v = 0.717\\ \\text{kJ/kg·K}\\).\nCalculate:\nA. The maximum temperature attained in the cycle.\nB. The work done during the cycle per kg of working fluid.\nC. The ideal thermal efficiency of the cycle.\n\n8.2.1 Theory and formulas\nFor an ideal Otto cycle (constant-volume heat addition) the relevant steps and formulas are:\n\nIsentropic compression \\(1 \\to 2\\): \\[\nT_2 = T_1\\, r^{\\gamma-1}\n\\]\nConstant-volume heat addition \\(2 \\to 3\\): \\[\nq_{in} = c_v (T_3 - T_2) \\quad\\Rightarrow\\quad T_3 = T_2 + \\frac{q_{in}}{c_v}\n\\]\nIsentropic expansion \\(3 \\to 4\\): \\[\nT_4 = T_3\\, r^{1-\\gamma}\n\\]\nHeat rejected: \\[\nq_{out} = c_v (T_4 - T_1)\n\\]\nNet work per unit mass: \\[\nw = q_{in} - q_{out}\n\\]\nThermal efficiency: \\[\n\\eta = \\frac{w}{q_{in}} = 1 - \\frac{q_{out}}{q_{in}}\n\\]\n\n(For the ideal Otto cycle the formula reduces to the well-known expression \\(\\eta = 1 - r^{1-\\gamma}\\), which provides a check.)\n\n\n8.2.2 Code\n# Otto-cycle calculation (per kg)\n\n# Given data\nr = 5.0             # compression ratio\ngamma = 1.4\ncv = 0.717          # kJ/kg·K\nT1_C = 50.0         # °C\nq_in = 930.0        # kJ/kg\n\n# Conversions\nT1 = T1_C + 273  # K\n\n# Step 1: T2 (after isentropic compression)\nT2 = T1 * r**(gamma - 1)\n\n# Step 2: T3 (after constant-volume heat addition) -&gt; Tmax\nT3 = T2 + q_in / cv\n\n# Step 3: T4 (after isentropic expansion)\nT4 = T3 * r**(1 - gamma)\n\n# Heat rejected\nq_out = cv * (T4 - T1)\n\n# Net work per kg\nw_net = q_in - q_out\n\n# Efficiency\neta = w_net / q_in\n\n# Print results\nprint(f\"T1 = {T1:.2f} K ({T1 - 273:.2f} °C)\")\nprint(f\"T2 = {T2:.2f} K ({T2 - 273:.2f} °C)\")\nprint(f\"T3 = {T3:.2f} K ({T3 - 273:.2f} °C)  &lt;-- Tmax\")\nprint(f\"T4 = {T4:.2f} K ({T4 - 273:.2f} °C)\")\nprint()\nprint(f\"q_in = {q_in:.2f} kJ/kg\")\nprint(f\"q_out = {q_out:.2f} kJ/kg\")\nprint(f\"w_net = {w_net:.2f} kJ/kg\")\nprint(f\"efficiency = {eta*100:.2f} %\")\n\n\n8.2.3 Using Actual Volume Ratios Instead of Direct r\nIn the ideal Otto cycle we have written: \\[\nT_2 = T_1\\, r^{\\gamma-1},\n\\]\nwith \\(r=V_1/V_2\\). Here we make the volume-dependence explicit using \\(V_1\\) and \\(V_2\\).\n\n\n8.2.4 Given\n\n\\(T_1 = 50^\\circ\\text{C} = 323\\ \\text{K}\\)\nVolumetric compression ratio \\(r = \\dfrac{V_1}{V_2} = 5\\) (we’ll set \\(V_1=5,\\ V_2=1\\) so \\(V_1/V_2=5\\)\nHeat supplied \\(q_{in} = 930\\ \\text{kJ/kg}\\)\n\\(\\gamma = 1.4,\\ c_v = 0.717\\ \\text{kJ/kg·K}\\)\n\n\n\n8.2.5 Volume-explicit relations\nIsentropic compression (1) (using volumes): \\[\n\\frac{T_2}{T_1} = \\left(\\frac{V_1}{V_2}\\right)^{\\gamma-1}\n\\quad\\Rightarrow\\quad\nT_2 = T_1\\left(\\frac{V_1}{V_2}\\right)^{\\gamma-1}.\n\\]\nConstant-volume heat addition (2): \\[\nT_3 = T_2 + \\frac{q_{in}}{c_v}.\n\\]\nIsentropic expansion (3) (volume ratio inverted): \\[\n\\frac{T_4}{T_3} = \\left(\\frac{V_2}{V_1}\\right)^{\\gamma-1}\n\\quad\\Rightarrow\\quad\nT_4 = T_3\\left(\\frac{V_2}{V_1}\\right)^{\\gamma-1}.\n\\]\nHeat rejected: \\[\nq_{out} = c_v (T_4 - T_1),\n\\]\nNet work and efficiency: \\[\nw = q_{in} - q_{out},\\qquad \\eta = \\frac{w}{q_{in}}.\n\\]\n\n\n8.2.6 Code\n# Otto-cycle calculation using explicit volumes (per kg)\n\n# Given data\nV1 = 5.0        # arbitrary volume units (e.g. litres) at start of compression (BDC)\nV2 = 1.0        # arbitrary volume units at end of compression (TDC)\ngamma = 1.4\ncv = 0.717      # kJ/kg·K\nT1_C = 50.0     # °C\nq_in = 930.0    # kJ/kg\n\n# Conversions\nT1 = T1_C + 273  # K\n\n# Isentropic compression using volume ratio V1/V2\nT2 = T1 * (V1 / V2)**(gamma - 1)\n\n# Constant-volume heat addition\nT3 = T2 + q_in / cv\n\n# Isentropic expansion using inverted volume ratio V2/V1\nT4 = T3 * (V2 / V1)**(gamma - 1)\n\n# Heat rejected, net work and efficiency\nq_out = cv * (T4 - T1)\nw_net = q_in - q_out\neta = w_net / q_in\n\n# Print results\nprint(\"--- Inputs ---\")\nprint(f\"V1 = {V1:.3f} (units), V2 = {V2:.3f} (units)  --&gt; V1/V2 = {V1/V2:.3f}\")\nprint(f\"T1 = {T1:.2f} K ({T1-273:.2f} °C)\")\nprint()\nprint(\"--- Results ---\")\nprint(f\"T2 = {T2:.2f} K ({T2-273:.2f} °C)\")\nprint(f\"T3 = {T3:.2f} K ({T3-273:.2f} °C)  &lt;-- Tmax\")\nprint(f\"T4 = {T4:.2f} K ({T4-273:.2f} °C)\")\nprint()\nprint(f\"q_in = {q_in:.2f} kJ/kg\")\nprint(f\"q_out = {q_out:.2f} kJ/kg\")\nprint(f\"w_net = {w_net:.2f} kJ/kg\")\nprint(f\"efficiency = {eta*100:.2f} %\")",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ideal Cycles</span>"
    ]
  },
  {
    "objectID": "ideal_cycles.html#ideal-constant-pressure-diesel-cycle",
    "href": "ideal_cycles.html#ideal-constant-pressure-diesel-cycle",
    "title": "8  Ideal Cycles",
    "section": "8.3 Ideal Constant-Pressure (Diesel) Cycle",
    "text": "8.3 Ideal Constant-Pressure (Diesel) Cycle\nThe Diesel cycle is a thermodynamic model of a compression-ignition engine, like those in marine diesel engines. Unlike the Otto cycle (constant-volume heat addition), the Diesel cycle assumes heat is added at constant pressure, reflecting the actual combustion in diesel engines.\nThe Diesel cycle consists of four thermodynamic processes—two isentropic (adiabatic and reversible), one constant-pressure, and constant-volume that describe the idealized behavior of a gas undergoing compression, combustion, expansion, and exhaust in a compression-ignition engine.\n\n8.3.1 P-V Diagram Representation\nThe Diesel cycle on a P-V diagram forms a closed loop:\n\n1-2: Steep upward curve (pressure increases, volume decreases, adiabatic compression).\n2-3: Horizontal line (pressure constant, volume increases, constant-pressure heat addition).\n3-4: Downward curve (pressure decreases, volume increases, adiabatic expansion).\n4-1: Vertical line downward (pressure and temperature decrease, volume constant, heat rejection).",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ideal Cycles</span>"
    ]
  },
  {
    "objectID": "ideal_cycles.html#diesel-cycle-example",
    "href": "ideal_cycles.html#diesel-cycle-example",
    "title": "8  Ideal Cycles",
    "section": "8.4 Diesel Cycle Example",
    "text": "8.4 Diesel Cycle Example\nGiven\n\n\\(T_1 = 50^\\circ\\text{C} = 323\\ \\text{K}\\)\nCompression ratio \\(r = \\dfrac{V_1}{V_2} = 5\\)\nHeat supplied \\(q_{in} = 930\\ \\text{kJ/kg}\\) (added at constant pressure)\n\\(\\gamma = 1.4,\\quad c_v = 0.717\\ \\text{kJ/kg·K}\\)\n\nNotes: For constant-pressure heat addition (2→3), \\[\nq_{in} = c_p\\,(T_3 - T_2),\\qquad c_p = c_v \\gamma.\n\\]\nThe cut-off (volume) ratio is \\(\\rho = \\dfrac{V_3}{V_2} = \\dfrac{T_3}{T_2}\\) because \\(p_2 = p_3\\)\n\n8.4.1 Code\n# Diesel-cycle calculation (per kg) - runnable in Quarto\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Given\nr = 5.0                # V1 / V2\ngamma = 1.4\ncv = 0.717             # kJ/kg·K\ncp = cv * gamma        # kJ/kg·K\nT1 = 323.0             # K (simplified 273 + 50)\nq_in = 930.0           # kJ/kg\n\n# State 2: isentropic compression 1-&gt;2\nT2 = T1 * r**(gamma - 1)\n\n# State 3: constant-pressure heat addition 2-&gt;3\n# q_in = cp * (T3 - T2)  -&gt;  T3 = T2 + q_in / cp\nT3 = T2 + q_in / cp\n\n# Cut-off ratio (V3/V2) since p2 = p3\nrho = T3 / T2\n\n# State 4: isentropic expansion 3-&gt;4 (V4 = V1)\n# T4 = T3 * (V3/V4)^(gamma-1) = T3 * (rho / r)^(gamma-1)\nT4 = T3 * (rho / r)**(gamma - 1)\n\n# Heat rejected, net work and efficiency\nq_out = cv * (T4 - T1)\nw_net = q_in - q_out\neta = w_net / q_in\n\n# Pressures (normalized) using ideal-gas relation P ∝ T/V\nP1 = 1.0\nP2 = P1 * (T2/T1) * (V1 := r) / (V2 := 1.0)   # V1=r, V2=1 chosen for explicitness\nP3 = P2\nV3 = rho * V2\nP4 = (T4 / T1) * (V1 / (V1)) * P1  # alternatively compute via ideal gas: P4 = P3 * (T4/T3) * (V3/V4)\n\n# More consistent P4 via ideal gas:\nP4 = P3 * (T4 / T3) * (V3 / V1)\n\n# Curves for PV diagram\nV_compression = np.linspace(V1, V2, 200)  # 1 -&gt; 2 (compression)\nP_compression = P1 * (V1 / V_compression)**gamma\n\nV_expansion = np.linspace(V3, V1, 200)    # 3 -&gt; 4 (expansion)\nP_expansion = P3 * (V3 / V_expansion)**gamma\n\nplt.figure(figsize=(8,5))\nplt.plot(V_compression, P_compression, label=\"Isentropic compression (1→2)\")\nplt.plot([V2, V3], [P2, P3], 'r-', linewidth=2, label=\"Constant-pressure heat addition (2→3)\")\nplt.plot(V_expansion, P_expansion, label=\"Isentropic expansion (3→4)\")\nplt.plot([V1, V1], [P4, P1], 'r-', linewidth=2, label=\"Constant-volume heat rejection (4→1)\")\n# mark state points\nplt.plot([V1, V2, V3, V1], [P1, P2, P3, P4], 'ko')\nfor (V,P,label) in [(V1,P1,\"1\"), (V2,P2,\"2\"), (V3,P3,\"3\"), (V1,P4,\"4\")]:\n    plt.text(V, P*1.02, label, ha='center')\n\nplt.xlabel(\"Volume (arbitrary units)\")\nplt.ylabel(\"Pressure (arbitrary units)\")\nplt.title(\"Ideal Diesel Cycle — P–V Diagram (normalized)\")\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n\n# Print numeric results\nprint(\"---- Diesel Cycle Results (per kg) ----\")\nprint(f\"T1 = {T1:.2f} K\")\nprint(f\"T2 = {T2:.2f} K\")\nprint(f\"T3 = {T3:.2f} K  (Tmax after constant-pressure heat addition)\")\nprint(f\"T4 = {T4:.2f} K\")\nprint()\nprint(f\"Cut-off ratio (rho = V3/V2) = {rho:.4f}\")\nprint(f\"q_in = {q_in:.2f} kJ/kg\")\nprint(f\"q_out = {q_out:.2f} kJ/kg\")\nprint(f\"Net work w = {w_net:.2f} kJ/kg\")\nprint(f\"Ideal thermal efficiency = {eta*100:.2f} %\")",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ideal Cycles</span>"
    ]
  },
  {
    "objectID": "ideal_cycles.html#dual-combustion-cycle",
    "href": "ideal_cycles.html#dual-combustion-cycle",
    "title": "8  Ideal Cycles",
    "section": "8.5 Dual Combustion Cycle",
    "text": "8.5 Dual Combustion Cycle\nThe Dual Combustion cycle, or mixed cycle, models engines that combine constant-volume (Otto cycle) and constant-pressure (Diesel cycle) combustion. Fuel burns in two phases: a fast initial phase at constant volume, then a slower phase at constant pressure, providing a realistic approximation of modern diesel engine combustion.\n\n8.5.1 Efficiency of the Dual Combustion Cycle\nThe thermal efficiency (\\(\\eta\\)) of the ideal Dual Combustion Cycle is defined as the ratio of net work output to total heat input:\n\\(\\eta = \\frac{W_{\\text{net}}}{Q_{\\text{in}}} = \\frac{Q_{\\text{in,1}} + Q_{\\text{in,2}} - Q_{\\text{out}}}{Q_{\\text{in,1}} + Q_{\\text{in,2}}}\\)\nSubstituting the heat terms:\n\\(Q_{\\text{in,1}} = m C_v (T_3 - T_2)\\)\n\\(Q_{\\text{in,2}} = m C_p (T_4 - T_3)\\)\n\\(Q_{\\text{out}} = m C_v (T_5 - T_1)\\)\n\\(\\eta = 1 - \\frac{Q_{\\text{out}}}{Q_{\\text{in,1}} + Q_{\\text{in,2}}} = 1 - \\frac{C_v (T_5 - T_1)}{C_v (T_3 - T_2) + C_p (T_4 - T_3)}\\)\n\\[\n\\eta = 1 - \\frac{(T_5 - T_1)}{(T_3 - T_2) + \\gamma (T_4 - T_3)}\n\\tag{8.1}\\]\n\n\n8.5.2 P-V Diagram Representation\nThe Dual Combustion Cycle on a P-V diagram forms a closed loop:\n\n1-2: Steep upward curve (pressure increases, volume decreases, adiabatic compression).\n2-3: Vertical line upward (pressure and temperature increase, volume constant, heat addition).\n3-4: Horizontal line (pressure constant, volume increases, heat addition).\n4-5: Downward curve (pressure decreases, volume increases, adiabatic expansion).\n5-1: Vertical line downward (pressure and temperature decrease, volume constant, heat rejection).",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ideal Cycles</span>"
    ]
  },
  {
    "objectID": "SI_common_mistakes.html",
    "href": "SI_common_mistakes.html",
    "title": "Appendix A — SI System Common Mistakes",
    "section": "",
    "text": "Using the SI system correctly is crucial for clear communication in science and engineering. Below are common mistakes in using the SI system, examples of incorrect usage, and how to correct them.\n\nSI system rules and common mistakes\n\n\n\n\n\n\n\n\nConcept\nMistake\nCorrect Usage\nNotes\n\n\n\n\nUse of SI Unit Symbols\nm./s\nm/s\nUse the correct format without additional punctuation.\n\n\nSpacing Between Value & Unit\n10kg\n10 kg\nAlways leave a space between the number and the unit symbol.\n\n\nIncorrect Unit Symbols\nsec, hrs, °K\ns, h, K\nUse the proper SI symbols; symbols are case-sensitive.\n\n\nAbbreviations for Units\n5 kilograms (kgs)\n5 kilograms (kg)\nAvoid informal abbreviations like “kgs”; adhere to standard symbols.\n\n\nMultiple Units in Expressions\n5 m/s/s, 5 kg/meter²\n5 m/s², 5 kg/m²\nUse compact, standardized formats for derived units.\n\n\nIncorrect Use of Prefixes\n0.0001 km\n100 mm\nChoose prefixes to keep numbers in the range (0.1 x &lt; 1000).\n\n\nMisplaced Unit Symbols\n5/s, kg10\n5 s⁻¹, 10 kg\nSymbols must follow numerical values, not precede them.\n\n\nDegrees Celsius vs. Kelvin\n300°K\n300 K\nKelvin is written without “degree”\n\n\nSingular vs. Plural Units\n5 kgs, 1 meters\n5 kg, 1 meter\nSymbols do not pluralize; full unit names follow grammar rules.\n\n\nCapitalization of Symbols\nKg, S, Km, MA\nkg, s, km, mA\nSymbols are case-sensitive; use uppercase only where specified (e.g., N, Pa).\n\n\nCapitalization of Unit Names\nNewton, Pascal, Watt\nnewton, pascal, watt\nUnit names are lowercase, even if derived from a person’s name, unless starting a sentence.\n\n\nPrefix Capitalization\nMilliMeter, MegaWatt\nmillimeter, megawatt\nPrefixes are lowercase for (10^{-1}) to (10^{-9}), uppercase for (10^6) and larger (except k for kilo).\n\n\nFormatting in Reports\n5, Temperature: 300\n5 kg, Temperature: 300 K\nAlways specify units explicitly.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>SI System Common Mistakes</span>"
    ]
  },
  {
    "objectID": "greek_letters.html",
    "href": "greek_letters.html",
    "title": "Appendix B — Greek Letters",
    "section": "",
    "text": "The following tables present the names of Greek letters and selected symbols commonly used in engineering courses, ensuring precise reference and avoiding reliance on informal descriptors such as “squiggle.”\n\nGreek letters.\n\n\nLower Case\nUpper Case\nName\n\n\n\n\n\\(\\alpha\\)\nA\nalpha\n\n\n\\(\\beta\\)\nB\nbeta\n\n\n\\(\\gamma\\)\n\\(\\Gamma\\)\ngamma\n\n\n\\(\\delta\\)\n\\(\\Delta\\)\ndelta\n\n\n\\(\\epsilon\\)\nE\nepsilon\n\n\n\\(\\zeta\\)\nZ\nzeta\n\n\n\\(\\eta\\)\nE\neta\n\n\n\\(\\theta\\)\n\\(\\Theta\\)\ntheta\n\n\n\\(\\iota\\)\nI\niota\n\n\n\\(\\kappa\\)\nK\nkappa\n\n\n\\(\\lambda\\)\n\\(\\Lambda\\)\nlambda\n\n\n\\(\\mu\\)\nM\nmu\n\n\n\\(\\nu\\)\nN\nnu\n\n\n\\(\\xi\\)\n\\(\\Xi\\)\nxi\n\n\n\\(\\omicron\\)\nO\nomicron\n\n\n\\(\\pi\\)\n\\(\\Pi\\)\npi\n\n\n\\(\\rho\\)\nP\nrho\n\n\n\\(\\sigma\\)\n\\(\\Sigma\\)\nsigma\n\n\n\\(\\tau\\)\nT\ntau\n\n\n\\(\\upsilon\\)\n\\(\\Upsilon\\)\nupsilon\n\n\n\\(\\phi\\)\n\\(\\Phi\\)\nphi\n\n\n\\(\\chi\\)\nX\nchi\n\n\n\\(\\psi\\)\n\\(\\Psi\\)\npsi\n\n\n\\(\\omega\\)\n\\(\\Omega\\)\nomega\n\n\n\n\nCommonly used symbols in engineering courses.\n\n\n\n\n\n\n\n\nSymbol\nName\nUse\nCourse\n\n\n\n\n\\(\\Delta\\)\nDelta\nChange\nThermodynamics\n\n\n\\(\\Delta\\)\nDelta\nDisplacement\nNaval Architecture\n\n\n\\(\\nabla\\)\nNabla\nVolume\nNaval Architecture\n\n\n\\(\\Sigma\\)\nSigma\nSum\nThermodynamics, Naval Architecture, Applied Mechanics\n\n\n\\(\\sigma\\)\nSigma\nStress\nThermodynamics, Applied Mechanics\n\n\n\\(\\epsilon\\)\nEpsilon\nModulus of elasticity\nThermodynamics, Applied Mechanics\n\n\n\\(\\eta\\)\nEta\nEfficiency\nThermodynamics\n\n\n\\(\\omega\\)\nOmega\nAngular velocity\nThermodynamics, Applied Mechanics\n\n\n\\(\\rho\\)\nRho\nDensity\nThermodynamics, Naval Architecture\n\n\n\\(\\tau\\)\nTau\nTorque\nThermodynamics, Applied Mechanics",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Greek Letters</span>"
    ]
  }
]